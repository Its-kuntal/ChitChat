<%- include('partials/header') %>

<div class="flex items-center justify-center min-h-screen bg-gray-50 dark:bg-slate-900">
    <div class="w-full max-w-md p-8 space-y-6 bg-white dark:bg-slate-800 rounded-2xl shadow-xl border border-gray-200 dark:border-slate-700">
        <div class="text-center">
            <h2 class="text-3xl font-bold text-gray-800 dark:text-gray-200">Create an Account</h2>
            <p class="mt-2 text-sm text-gray-600 dark:text-gray-400">Join ChitChat and start connecting</p>
        </div>

        <% if (error) { %>
            <div class="p-4 text-sm text-red-700 bg-red-50 dark:bg-red-900/20 dark:text-red-400 border border-red-200 dark:border-red-800 rounded-xl" role="alert">
                <div class="flex items-center">
                    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
                    </svg>
                    <%= error %>
                </div>
            </div>
        <% } %>

        <form id="register-form" action="/register" method="POST" class="space-y-6">
            <div>
                <label for="username" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Username</label>
                <input 
                    type="text" 
                    name="username" 
                    id="username" 
                    value="<%= typeof username !== 'undefined' ? username : '' %>"
                    required 
                    class="w-full px-4 py-3 border border-gray-300 dark:border-slate-600 rounded-xl bg-white dark:bg-slate-700 text-gray-800 dark:text-gray-200 placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-200"
                    placeholder="Enter your username"
                >
                <div id="username-error" class="mt-2 text-sm text-red-600 dark:text-red-400 hidden"></div>
                <div class="mt-2 text-xs text-gray-500 dark:text-gray-400">
                    Username must be 3-20 characters long and contain only letters, numbers, and underscores.
                </div>
            </div>
            
            <div>
                <label for="password" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Password</label>
                <div class="relative">
                    <input 
                        type="password" 
                        name="password" 
                        id="password" 
                        value="<%= typeof password !== 'undefined' ? password : '' %>"
                        required 
                        class="w-full px-4 py-3 pr-12 border border-gray-300 dark:border-slate-600 rounded-xl bg-white dark:bg-slate-700 text-gray-800 dark:text-gray-200 placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-200"
                        placeholder="Enter your password"
                    >
                    <button 
                        type="button" 
                        id="toggle-password" 
                        class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 transition-colors duration-200"
                    >
                        <svg id="eye-icon" class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                        </svg>
                    </button>
                </div>
                <div id="password-error" class="mt-2 text-sm text-red-600 dark:text-red-400 hidden"></div>
                <div class="mt-2 text-xs text-gray-500 dark:text-gray-400">
                    Password must be at least 8 characters with uppercase, lowercase, and a number.
                </div>
            </div>

            <!-- Password Requirements -->
            <div id="password-requirements" class="space-y-2 text-xs">
                <div class="flex items-center space-x-2">
                    <div id="req-length" class="w-4 h-4 rounded-full border-2 border-gray-300 dark:border-slate-600 flex items-center justify-center">
                        <svg class="w-3 h-3 text-white hidden" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                        </svg>
                    </div>
                    <span class="text-gray-600 dark:text-gray-400">At least 8 characters</span>
                </div>
                <div class="flex items-center space-x-2">
                    <div id="req-uppercase" class="w-4 h-4 rounded-full border-2 border-gray-300 dark:border-slate-600 flex items-center justify-center">
                        <svg class="w-3 h-3 text-white hidden" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                        </svg>
                    </div>
                    <span class="text-gray-600 dark:text-gray-400">One uppercase letter</span>
                </div>
                <div class="flex items-center space-x-2">
                    <div id="req-lowercase" class="w-4 h-4 rounded-full border-2 border-gray-300 dark:border-slate-600 flex items-center justify-center">
                        <svg class="w-3 h-3 text-white hidden" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                        </svg>
                    </div>
                    <span class="text-gray-600 dark:text-gray-400">One lowercase letter</span>
                </div>
                <div class="flex items-center space-x-2">
                    <div id="req-number" class="w-4 h-4 rounded-full border-2 border-gray-300 dark:border-slate-600 flex items-center justify-center">
                        <svg class="w-3 h-3 text-white hidden" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                        </svg>
                    </div>
                    <span class="text-gray-600 dark:text-gray-400">One number (0-9)</span>
                </div>
            </div>
            
            <div>
                <button 
                    type="submit" 
                    id="register-btn"
                    class="w-full px-4 py-3 font-medium text-white bg-indigo-500 hover:bg-indigo-600 rounded-xl transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed"
                >
                    <span id="register-text">Create Account</span>
                    <svg id="register-spinner" class="hidden w-5 h-5 mx-auto animate-spin" fill="none" viewBox="0 0 24 24">
                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                    </svg>
                </button>
            </div>
        </form>
        
        <div class="text-center">
            <p class="text-sm text-gray-600 dark:text-gray-400">
                Already have an account? 
                <a href="/" class="font-medium text-indigo-500 hover:text-indigo-400 transition-colors duration-200">Sign in</a>
            </p>
        </div>
    </div>
</div>

<script>
// Registration form validation and enhancement
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('register-form');
    const usernameInput = document.getElementById('username');
    const passwordInput = document.getElementById('password');
    const togglePasswordBtn = document.getElementById('toggle-password');
    const eyeIcon = document.getElementById('eye-icon');
    const registerBtn = document.getElementById('register-btn');
    const registerText = document.getElementById('register-text');
    const registerSpinner = document.getElementById('register-spinner');
    
    // Password visibility toggle
    togglePasswordBtn.addEventListener('click', function() {
        const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
        passwordInput.setAttribute('type', type);
        
        if (type === 'text') {
            eyeIcon.innerHTML = `
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21"></path>
            `;
        } else {
            eyeIcon.innerHTML = `
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
            `;
        }
    });
    
    // Username validation
    function validateUsername(username) {
        const errors = [];
        
        if (username.length < 3) {
            errors.push('Username must be at least 3 characters long');
        }
        
        if (username.length > 20) {
            errors.push('Username must be less than 20 characters');
        }
        
        if (!/^[a-zA-Z0-9_]+$/.test(username)) {
            errors.push('Username can only contain letters, numbers, and underscores');
        }
        
        return errors;
    }
    
    // Password validation
    function validatePassword(password) {
        const errors = [];
        
        if (password.length < 8) {
            errors.push('Password must be at least 8 characters long');
        }
        
        if (!/[A-Z]/.test(password)) {
            errors.push('Password must contain at least one uppercase letter');
        }
        
        if (!/[a-z]/.test(password)) {
            errors.push('Password must contain at least one lowercase letter');
        }
        
        if (!/\d/.test(password)) {
            errors.push('Password must contain at least one digit (0-9)');
        }
        
        return errors;
    }
    
    // Update password requirements visual indicators
    function updatePasswordRequirements(password) {
        const requirements = {
            length: password.length >= 8,
            uppercase: /[A-Z]/.test(password),
            lowercase: /[a-z]/.test(password),
            number: /\d/.test(password)
        };
        
        Object.keys(requirements).forEach(req => {
            const element = document.getElementById(`req-${req}`);
            const icon = element.querySelector('svg');
            
            if (requirements[req]) {
                element.classList.remove('border-gray-300', 'dark:border-slate-600');
                element.classList.add('border-green-500', 'bg-green-500');
                icon.classList.remove('hidden');
            } else {
                element.classList.remove('border-green-500', 'bg-green-500');
                element.classList.add('border-gray-300', 'dark:border-slate-600');
                icon.classList.add('hidden');
            }
        });
    }
    
    // Real-time validation
    usernameInput.addEventListener('input', function() {
        const errors = validateUsername(this.value);
        const errorDiv = document.getElementById('username-error');
        
        if (errors.length > 0 && this.value.length > 0) {
            errorDiv.textContent = errors[0];
            errorDiv.classList.remove('hidden');
            this.classList.add('border-red-500', 'focus:ring-red-500');
            this.classList.remove('border-gray-300', 'dark:border-slate-600', 'focus:ring-indigo-500');
        } else {
            errorDiv.classList.add('hidden');
            this.classList.remove('border-red-500', 'focus:ring-red-500');
            this.classList.add('border-gray-300', 'dark:border-slate-600', 'focus:ring-indigo-500');
        }
    });
    
    passwordInput.addEventListener('input', function() {
        const errors = validatePassword(this.value);
        const errorDiv = document.getElementById('password-error');
        
        updatePasswordRequirements(this.value);
        
        if (errors.length > 0 && this.value.length > 0) {
            errorDiv.textContent = errors[0];
            errorDiv.classList.remove('hidden');
            this.classList.add('border-red-500', 'focus:ring-red-500');
            this.classList.remove('border-gray-300', 'dark:border-slate-600', 'focus:ring-indigo-500');
        } else {
            errorDiv.classList.add('hidden');
            this.classList.remove('border-red-500', 'focus:ring-red-500');
            this.classList.add('border-gray-300', 'dark:border-slate-600', 'focus:ring-indigo-500');
        }
    });
    
    // Form submission
    form.addEventListener('submit', function(e) {
        const username = usernameInput.value.trim();
        const password = passwordInput.value;
        
        const usernameErrors = validateUsername(username);
        const passwordErrors = validatePassword(password);
        
        if (usernameErrors.length > 0 || passwordErrors.length > 0) {
            e.preventDefault();
            
            if (usernameErrors.length > 0) {
                const errorDiv = document.getElementById('username-error');
                errorDiv.textContent = usernameErrors[0];
                errorDiv.classList.remove('hidden');
                usernameInput.classList.add('border-red-500', 'focus:ring-red-500');
            }
            
            if (passwordErrors.length > 0) {
                const errorDiv = document.getElementById('password-error');
                errorDiv.textContent = passwordErrors[0];
                errorDiv.classList.remove('hidden');
                passwordInput.classList.add('border-red-500', 'focus:ring-red-500');
            }
            
            return;
        }
        
        // Show loading state
        registerBtn.disabled = true;
        registerText.classList.add('hidden');
        registerSpinner.classList.remove('hidden');
    });
    
    // Initialize password requirements if password field has value
    if (passwordInput.value) {
        updatePasswordRequirements(passwordInput.value);
    }
});
</script>

</body>
</html>